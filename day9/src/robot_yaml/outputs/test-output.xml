<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on win32)" generated="20200916 17:13:21.719" rpa="false">
<suite id="s1" name="Activate Variable">
<kw name="Save Function Result Into Variables" library="dynamic_save" type="setup">
<doc>1. get function result by dpath and save it into robot variable
2. saved variable type only support global, suite, test, common variable
3. run keyword with robot variable</doc>
<arguments>
<arg>[ordereddict([('keyword', 'return_func'), ('saved_var_names', [ordereddict([('name', '${result}')])]), ('type', 'set_suite_variable')])]</arg>
<arg>set_suite_variable</arg>
<arg>['${testvar}', '${result}']</arg>
</arguments>
<kw name="Return Func" library="dynamic_save">
<status status="PASS" starttime="20200916 17:13:21.772" endtime="20200916 17:13:21.772"></status>
</kw>
<msg timestamp="20200916 17:13:21.772" level="INFO">the receive: [ordereddict([('name', '${result}')])]</msg>
<msg timestamp="20200916 17:13:21.772" level="INFO">the return value: a</msg>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${result}</arg>
<arg>a</arg>
</arguments>
<msg timestamp="20200916 17:13:21.773" level="INFO">${result} = a</msg>
<status status="PASS" starttime="20200916 17:13:21.772" endtime="20200916 17:13:21.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${testvar}</arg>
<arg>${result}</arg>
</arguments>
<msg timestamp="20200916 17:13:21.775" level="INFO">${testvar} = a</msg>
<status status="PASS" starttime="20200916 17:13:21.774" endtime="20200916 17:13:21.775"></status>
</kw>
<status status="PASS" starttime="20200916 17:13:21.768" endtime="20200916 17:13:21.775"></status>
</kw>
<test id="s1-t1" name="Test return list">
<kw name="Save Function Result Into Variables" library="dynamic_save">
<doc>1. get function result by dpath and save it into robot variable
2. saved variable type only support global, suite, test, common variable
3. run keyword with robot variable</doc>
<arguments>
<arg>[ordereddict([('keyword', 'return_func_list'), ('saved_var_names', [ordereddict([('name', '${first_var}'), ('dpath', 0)]), ordereddict([('name', '${last_var}'), ('dpath', '2/a')])])])]</arg>
<arg>log</arg>
<arg>['${first_var}']</arg>
</arguments>
<kw name="Return Func List" library="dynamic_save">
<status status="PASS" starttime="20200916 17:13:21.777" endtime="20200916 17:13:21.777"></status>
</kw>
<msg timestamp="20200916 17:13:21.777" level="INFO">the receive: [ordereddict([('name', '${first_var}'), ('dpath', 0)]), ordereddict([('name', '${last_var}'), ('dpath', '2/a')])]</msg>
<msg timestamp="20200916 17:13:21.777" level="INFO">the return value: [1, 2, {'a': 1}]</msg>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${first_var}</arg>
<arg>[1, 2, {'a': 1}]</arg>
</arguments>
<msg timestamp="20200916 17:13:21.778" level="INFO">${first_var} = [1, 2, {'a': 1}]</msg>
<status status="PASS" starttime="20200916 17:13:21.777" endtime="20200916 17:13:21.778"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${last_var}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200916 17:13:21.787" level="INFO">${last_var} = 1</msg>
<status status="PASS" starttime="20200916 17:13:21.786" endtime="20200916 17:13:21.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${first_var}</arg>
</arguments>
<msg timestamp="20200916 17:13:21.787" level="INFO">[1, 2, {'a': 1}]</msg>
<status status="PASS" starttime="20200916 17:13:21.787" endtime="20200916 17:13:21.788"></status>
</kw>
<status status="PASS" starttime="20200916 17:13:21.776" endtime="20200916 17:13:21.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${last_var}</arg>
</arguments>
<msg timestamp="20200916 17:13:21.789" level="INFO">1</msg>
<status status="PASS" starttime="20200916 17:13:21.789" endtime="20200916 17:13:21.789"></status>
</kw>
<kw name="Should Be Not None" library="asserts">
<arguments>
<arg>${last_var}</arg>
</arguments>
<status status="PASS" starttime="20200916 17:13:21.790" endtime="20200916 17:13:21.790"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20200916 17:13:21.776" endtime="20200916 17:13:21.791" critical="yes"></status>
</test>
<test id="s1-t2" name="Test return dict">
<kw name="Save Function Result Into Variables" library="dynamic_save">
<doc>1. get function result by dpath and save it into robot variable
2. saved variable type only support global, suite, test, common variable
3. run keyword with robot variable</doc>
<arguments>
<arg>[ordereddict([('keyword', 'return_func_dict'), ('saved_var_names', [ordereddict([('name', '${first}'), ('dpath', 'a')]), ordereddict([('name', '${last}')])])])]</arg>
<arg>log</arg>
<arg>['${first}']</arg>
</arguments>
<kw name="Return Func Dict" library="dynamic_save">
<status status="PASS" starttime="20200916 17:13:21.798" endtime="20200916 17:13:21.798"></status>
</kw>
<msg timestamp="20200916 17:13:21.798" level="INFO">the receive: [ordereddict([('name', '${first}'), ('dpath', 'a')]), ordereddict([('name', '${last}')])]</msg>
<msg timestamp="20200916 17:13:21.798" level="INFO">the return value: {'a': 1, 'b': 2}</msg>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${first}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200916 17:13:21.799" level="INFO">${first} = 1</msg>
<status status="PASS" starttime="20200916 17:13:21.799" endtime="20200916 17:13:21.799"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${last}</arg>
<arg>{'a': 1, 'b': 2}</arg>
</arguments>
<msg timestamp="20200916 17:13:21.800" level="INFO">${last} = {'a': 1, 'b': 2}</msg>
<status status="PASS" starttime="20200916 17:13:21.800" endtime="20200916 17:13:21.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${first}</arg>
</arguments>
<msg timestamp="20200916 17:13:21.801" level="INFO">1</msg>
<status status="PASS" starttime="20200916 17:13:21.800" endtime="20200916 17:13:21.801"></status>
</kw>
<status status="PASS" starttime="20200916 17:13:21.794" endtime="20200916 17:13:21.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${last}</arg>
</arguments>
<msg timestamp="20200916 17:13:21.802" level="INFO">{'a': 1, 'b': 2}</msg>
<status status="PASS" starttime="20200916 17:13:21.802" endtime="20200916 17:13:21.802"></status>
</kw>
<kw name="Should Be Not None" library="asserts">
<arguments>
<arg>${last}</arg>
</arguments>
<status status="PASS" starttime="20200916 17:13:21.803" endtime="20200916 17:13:21.803"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20200916 17:13:21.793" endtime="20200916 17:13:21.804" critical="yes"></status>
</test>
<test id="s1-t3" name="Test return string">
<kw name="Save Function Result Into Variables" library="dynamic_save">
<doc>1. get function result by dpath and save it into robot variable
2. saved variable type only support global, suite, test, common variable
3. run keyword with robot variable</doc>
<arguments>
<arg>[ordereddict([('keyword', 'return_func'), ('saved_var_names', [ordereddict([('name', '${strvar}')])])])]</arg>
<arg>log</arg>
<arg>['${strvar}']</arg>
</arguments>
<kw name="Return Func" library="dynamic_save">
<status status="PASS" starttime="20200916 17:13:21.807" endtime="20200916 17:13:21.808"></status>
</kw>
<msg timestamp="20200916 17:13:21.808" level="INFO">the receive: [ordereddict([('name', '${strvar}')])]</msg>
<msg timestamp="20200916 17:13:21.808" level="INFO">the return value: a</msg>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${strvar}</arg>
<arg>a</arg>
</arguments>
<msg timestamp="20200916 17:13:21.809" level="INFO">${strvar} = a</msg>
<status status="PASS" starttime="20200916 17:13:21.808" endtime="20200916 17:13:21.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${strvar}</arg>
</arguments>
<msg timestamp="20200916 17:13:21.810" level="INFO">a</msg>
<status status="PASS" starttime="20200916 17:13:21.809" endtime="20200916 17:13:21.810"></status>
</kw>
<status status="PASS" starttime="20200916 17:13:21.806" endtime="20200916 17:13:21.810"></status>
</kw>
<kw name="Should Be Not None" library="asserts">
<arguments>
<arg>${strvar}</arg>
</arguments>
<status status="PASS" starttime="20200916 17:13:21.811" endtime="20200916 17:13:21.811"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20200916 17:13:21.806" endtime="20200916 17:13:21.813" critical="yes"></status>
</test>
<test id="s1-t4" name="Test setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testvar}</arg>
</arguments>
<msg timestamp="20200916 17:13:21.817" level="INFO">a</msg>
<status status="PASS" starttime="20200916 17:13:21.817" endtime="20200916 17:13:21.818"></status>
</kw>
<kw name="Should Be Not None" library="asserts">
<arguments>
<arg>${testvar}</arg>
</arguments>
<status status="PASS" starttime="20200916 17:13:21.818" endtime="20200916 17:13:21.819"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20200916 17:13:21.816" endtime="20200916 17:13:21.819" critical="yes"></status>
</test>
<kw name="Log" library="BuiltIn" type="teardown">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testvar}</arg>
</arguments>
<msg timestamp="20200916 17:13:21.822" level="INFO">a</msg>
<status status="PASS" starttime="20200916 17:13:21.821" endtime="20200916 17:13:21.822"></status>
</kw>
<status status="PASS" starttime="20200916 17:13:21.721" endtime="20200916 17:13:21.822"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0">smoke</stat>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Activate Variable">Activate Variable</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
