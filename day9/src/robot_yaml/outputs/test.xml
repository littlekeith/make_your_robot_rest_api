<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on win32)" generated="20200916 17:14:27.314" rpa="false">
<suite id="s1" name="Activate Variable">
<kw name="Save Function Result Into Variables" library="dynamic_save" type="setup">
<doc>1. get function result by dpath and save it into robot variable
2. saved variable type only support global, suite, test, common variable
3. run keyword with robot variable</doc>
<arguments>
<arg>[ordereddict([('keyword', 'return_func'), ('saved_var_names', [ordereddict([('name', '${result}')])]), ('type', 'set_suite_variable')])]</arg>
<arg>set_suite_variable</arg>
<arg>['${testvar}', '${result}']</arg>
</arguments>
<kw name="Return Func" library="dynamic_save">
<status status="PASS" starttime="20200916 17:14:27.363" endtime="20200916 17:14:27.364"></status>
</kw>
<msg timestamp="20200916 17:14:27.364" level="INFO">the receive: [ordereddict([('name', '${result}')])]</msg>
<msg timestamp="20200916 17:14:27.364" level="INFO">the return value: a</msg>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${result}</arg>
<arg>a</arg>
</arguments>
<msg timestamp="20200916 17:14:27.365" level="INFO">${result} = a</msg>
<status status="PASS" starttime="20200916 17:14:27.364" endtime="20200916 17:14:27.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${testvar}</arg>
<arg>${result}</arg>
</arguments>
<msg timestamp="20200916 17:14:27.366" level="INFO">${testvar} = a</msg>
<status status="PASS" starttime="20200916 17:14:27.365" endtime="20200916 17:14:27.366"></status>
</kw>
<status status="PASS" starttime="20200916 17:14:27.362" endtime="20200916 17:14:27.366"></status>
</kw>
<test id="s1-t1" name="Test return list">
<kw name="Save Function Result Into Variables" library="dynamic_save">
<doc>1. get function result by dpath and save it into robot variable
2. saved variable type only support global, suite, test, common variable
3. run keyword with robot variable</doc>
<arguments>
<arg>[ordereddict([('keyword', 'return_func_list'), ('saved_var_names', [ordereddict([('name', '${first_var}'), ('dpath', 0)]), ordereddict([('name', '${last_var}'), ('dpath', '2/a')])])])]</arg>
<arg>log</arg>
<arg>['${first_var}']</arg>
</arguments>
<kw name="Return Func List" library="dynamic_save">
<status status="PASS" starttime="20200916 17:14:27.368" endtime="20200916 17:14:27.369"></status>
</kw>
<msg timestamp="20200916 17:14:27.369" level="INFO">the receive: [ordereddict([('name', '${first_var}'), ('dpath', 0)]), ordereddict([('name', '${last_var}'), ('dpath', '2/a')])]</msg>
<msg timestamp="20200916 17:14:27.369" level="INFO">the return value: [1, 2, {'a': 1}]</msg>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${first_var}</arg>
<arg>[1, 2, {'a': 1}]</arg>
</arguments>
<msg timestamp="20200916 17:14:27.370" level="INFO">${first_var} = [1, 2, {'a': 1}]</msg>
<status status="PASS" starttime="20200916 17:14:27.369" endtime="20200916 17:14:27.370"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${last_var}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200916 17:14:27.380" level="INFO">${last_var} = 1</msg>
<status status="PASS" starttime="20200916 17:14:27.379" endtime="20200916 17:14:27.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${first_var}</arg>
</arguments>
<msg timestamp="20200916 17:14:27.380" level="INFO">[1, 2, {'a': 1}]</msg>
<status status="PASS" starttime="20200916 17:14:27.380" endtime="20200916 17:14:27.380"></status>
</kw>
<status status="PASS" starttime="20200916 17:14:27.368" endtime="20200916 17:14:27.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${last_var}</arg>
</arguments>
<msg timestamp="20200916 17:14:27.382" level="INFO">1</msg>
<status status="PASS" starttime="20200916 17:14:27.381" endtime="20200916 17:14:27.382"></status>
</kw>
<kw name="Should Be Not None" library="asserts">
<arguments>
<arg>${last_var}</arg>
</arguments>
<status status="PASS" starttime="20200916 17:14:27.383" endtime="20200916 17:14:27.383"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20200916 17:14:27.367" endtime="20200916 17:14:27.384" critical="yes"></status>
</test>
<test id="s1-t2" name="Test return dict">
<kw name="Save Function Result Into Variables" library="dynamic_save">
<doc>1. get function result by dpath and save it into robot variable
2. saved variable type only support global, suite, test, common variable
3. run keyword with robot variable</doc>
<arguments>
<arg>[ordereddict([('keyword', 'return_func_dict'), ('saved_var_names', [ordereddict([('name', '${first}'), ('dpath', 'a')]), ordereddict([('name', '${last}')])])])]</arg>
<arg>log</arg>
<arg>['${first}']</arg>
</arguments>
<kw name="Return Func Dict" library="dynamic_save">
<status status="PASS" starttime="20200916 17:14:27.389" endtime="20200916 17:14:27.389"></status>
</kw>
<msg timestamp="20200916 17:14:27.389" level="INFO">the receive: [ordereddict([('name', '${first}'), ('dpath', 'a')]), ordereddict([('name', '${last}')])]</msg>
<msg timestamp="20200916 17:14:27.389" level="INFO">the return value: {'a': 1, 'b': 2}</msg>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${first}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200916 17:14:27.390" level="INFO">${first} = 1</msg>
<status status="PASS" starttime="20200916 17:14:27.389" endtime="20200916 17:14:27.390"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${last}</arg>
<arg>{'a': 1, 'b': 2}</arg>
</arguments>
<msg timestamp="20200916 17:14:27.391" level="INFO">${last} = {'a': 1, 'b': 2}</msg>
<status status="PASS" starttime="20200916 17:14:27.390" endtime="20200916 17:14:27.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${first}</arg>
</arguments>
<msg timestamp="20200916 17:14:27.391" level="INFO">1</msg>
<status status="PASS" starttime="20200916 17:14:27.391" endtime="20200916 17:14:27.391"></status>
</kw>
<status status="PASS" starttime="20200916 17:14:27.388" endtime="20200916 17:14:27.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${last}</arg>
</arguments>
<msg timestamp="20200916 17:14:27.393" level="INFO">{'a': 1, 'b': 2}</msg>
<status status="PASS" starttime="20200916 17:14:27.393" endtime="20200916 17:14:27.393"></status>
</kw>
<kw name="Should Be Not None" library="asserts">
<arguments>
<arg>${last}</arg>
</arguments>
<status status="PASS" starttime="20200916 17:14:27.394" endtime="20200916 17:14:27.394"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20200916 17:14:27.387" endtime="20200916 17:14:27.395" critical="yes"></status>
</test>
<test id="s1-t3" name="Test return string">
<kw name="Save Function Result Into Variables" library="dynamic_save">
<doc>1. get function result by dpath and save it into robot variable
2. saved variable type only support global, suite, test, common variable
3. run keyword with robot variable</doc>
<arguments>
<arg>[ordereddict([('keyword', 'return_func'), ('saved_var_names', [ordereddict([('name', '${strvar}')])])])]</arg>
<arg>log</arg>
<arg>['${strvar}']</arg>
</arguments>
<kw name="Return Func" library="dynamic_save">
<status status="PASS" starttime="20200916 17:14:27.398" endtime="20200916 17:14:27.399"></status>
</kw>
<msg timestamp="20200916 17:14:27.399" level="INFO">the receive: [ordereddict([('name', '${strvar}')])]</msg>
<msg timestamp="20200916 17:14:27.399" level="INFO">the return value: a</msg>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${strvar}</arg>
<arg>a</arg>
</arguments>
<msg timestamp="20200916 17:14:27.402" level="INFO">${strvar} = a</msg>
<status status="PASS" starttime="20200916 17:14:27.399" endtime="20200916 17:14:27.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${strvar}</arg>
</arguments>
<msg timestamp="20200916 17:14:27.404" level="INFO">a</msg>
<status status="PASS" starttime="20200916 17:14:27.404" endtime="20200916 17:14:27.404"></status>
</kw>
<status status="PASS" starttime="20200916 17:14:27.398" endtime="20200916 17:14:27.404"></status>
</kw>
<kw name="Should Be Not None" library="asserts">
<arguments>
<arg>${strvar}</arg>
</arguments>
<status status="PASS" starttime="20200916 17:14:27.405" endtime="20200916 17:14:27.406"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20200916 17:14:27.397" endtime="20200916 17:14:27.407" critical="yes"></status>
</test>
<test id="s1-t4" name="Test setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testvar}</arg>
</arguments>
<msg timestamp="20200916 17:14:27.410" level="INFO">a</msg>
<status status="PASS" starttime="20200916 17:14:27.409" endtime="20200916 17:14:27.410"></status>
</kw>
<kw name="Should Be Not None" library="asserts">
<arguments>
<arg>${testvar}</arg>
</arguments>
<status status="PASS" starttime="20200916 17:14:27.410" endtime="20200916 17:14:27.411"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20200916 17:14:27.409" endtime="20200916 17:14:27.411" critical="yes"></status>
</test>
<kw name="Log" library="BuiltIn" type="teardown">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${testvar}</arg>
</arguments>
<msg timestamp="20200916 17:14:27.413" level="INFO">a</msg>
<status status="PASS" starttime="20200916 17:14:27.412" endtime="20200916 17:14:27.413"></status>
</kw>
<status status="PASS" starttime="20200916 17:14:27.316" endtime="20200916 17:14:27.413"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="0">Critical Tests</stat>
<stat pass="4" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="0">smoke</stat>
</tag>
<suite>
<stat pass="4" fail="0" id="s1" name="Activate Variable">Activate Variable</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
