<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on win32)" generated="20201108 21:07:12.117" rpa="false">
<suite id="s1" name="Simple test the api--/user/logout">
<kw name="Create Session" library="RequestsLibrary" type="setup">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localenv</arg>
<arg>http://127.0.0.1:5000/v2/</arg>
</arguments>
<msg timestamp="20201108 21:07:12.386" level="INFO">Creating Session using : alias=localenv, url=http://127.0.0.1:5000/v2/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20201108 21:07:12.386" endtime="20201108 21:07:12.387"></status>
</kw>
<test id="s1-t1" name="success login">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>None</arg>
</arguments>
<assign>
<var>${request_data}</var>
</assign>
<msg timestamp="20201108 21:07:12.389" level="INFO">${request_data} = None</msg>
<status status="PASS" starttime="20201108 21:07:12.388" endtime="20201108 21:07:12.389"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>None</arg>
</arguments>
<assign>
<var>${request_json}</var>
</assign>
<msg timestamp="20201108 21:07:12.389" level="INFO">${request_json} = None</msg>
<status status="PASS" starttime="20201108 21:07:12.389" endtime="20201108 21:07:12.390"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>ordereddict([('username', 'test'), ('password', 'test')])</arg>
</arguments>
<assign>
<var>${request_params}</var>
</assign>
<msg timestamp="20201108 21:07:12.390" level="INFO">${request_params} = ordereddict([('username', 'test'), ('password', 'test')])</msg>
<status status="PASS" starttime="20201108 21:07:12.390" endtime="20201108 21:07:12.390"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localenv</arg>
<arg>/user/login</arg>
<arg>params=${request_params}</arg>
<arg>data=${request_data}</arg>
<arg>json=${request_json}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20201108 21:07:12.392" level="INFO">GET Request using : uri=/user/login, params=ordereddict([('username', 'test'), ('password', 'test')]), allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20201108 21:07:12.419" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201108 21:07:12.391" endtime="20201108 21:07:12.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20201108 21:07:12.420" level="INFO">{'login': True}</msg>
<status status="PASS" starttime="20201108 21:07:12.420" endtime="20201108 21:07:12.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.cookies}</arg>
</arguments>
<msg timestamp="20201108 21:07:12.421" level="INFO">&lt;RequestsCookieJar[&lt;Cookie access_token_cookie=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDQ4NDA4MzIsIm5iZiI6MTYwNDg0MDgzMiwianRpIjoiMTVhNGNhZTktNGQxZi00ODNjLWFjMzEtM2RjZDUzYTMwNTVlIiwiZXhwIjoxNjA0ODQxNzMyLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.dsVYZbi3_ih0jzUy-iT_WOsH1YoWiC1UHCMt6BVEY8w for 127.0.0.1/&gt;, &lt;Cookie refresh_token_cookie=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDQ4NDA4MzIsIm5iZiI6MTYwNDg0MDgzMiwianRpIjoiMTIxN2EzMWUtMWZlYi00NjA4LWJjYzgtOGQwNTc4YjY3ZmM0IiwiZXhwIjoxNjA3NDMyODMyLCJpZGVudGl0eSI6InRlc3QiLCJ0eXBlIjoicmVmcmVzaCJ9.96bxOFNaWz0gRI_cpeeTz9ik3RkOCnVLRgFdsxahsnw for 127.0.0.1/&gt;]&gt;</msg>
<status status="PASS" starttime="20201108 21:07:12.421" endtime="20201108 21:07:12.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20201108 21:07:12.422" level="INFO">http://127.0.0.1:5000/v2/user/login?username=test&amp;password=test</msg>
<status status="PASS" starttime="20201108 21:07:12.422" endtime="20201108 21:07:12.422"></status>
</kw>
<kw name="Assert Equal" library="asserts">
<doc>Fail if given objects are unequal as determined by the '==' operator.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20201108 21:07:12.423" endtime="20201108 21:07:12.423"></status>
</kw>
<kw name="Assert Equal By Dpath" library="asserts">
<doc>Fail if given objects are unequal as determined by the '==' operator.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>login</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20201108 21:07:12.436" level="INFO">Response was: {'login': True}</msg>
<msg timestamp="20201108 21:07:12.436" level="INFO">Dpath was: login</msg>
<msg timestamp="20201108 21:07:12.436" level="INFO">The real value was: True</msg>
<msg timestamp="20201108 21:07:12.437" level="INFO">The expected value was: True</msg>
<status status="PASS" starttime="20201108 21:07:12.424" endtime="20201108 21:07:12.437"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20201108 21:07:12.388" endtime="20201108 21:07:12.437" critical="yes"></status>
</test>
<test id="s1-t2" name="success logout">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>None</arg>
</arguments>
<assign>
<var>${request_data}</var>
</assign>
<msg timestamp="20201108 21:07:12.439" level="INFO">${request_data} = None</msg>
<status status="PASS" starttime="20201108 21:07:12.439" endtime="20201108 21:07:12.439"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>None</arg>
</arguments>
<assign>
<var>${request_json}</var>
</assign>
<msg timestamp="20201108 21:07:12.440" level="INFO">${request_json} = None</msg>
<status status="PASS" starttime="20201108 21:07:12.440" endtime="20201108 21:07:12.440"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>None</arg>
</arguments>
<assign>
<var>${request_params}</var>
</assign>
<msg timestamp="20201108 21:07:12.441" level="INFO">${request_params} = None</msg>
<status status="PASS" starttime="20201108 21:07:12.441" endtime="20201108 21:07:12.441"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localenv</arg>
<arg>/user/logout</arg>
<arg>params=${request_params}</arg>
<arg>data=${request_data}</arg>
<arg>json=${request_json}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20201108 21:07:12.443" level="INFO">GET Request using : uri=/user/logout, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20201108 21:07:12.463" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201108 21:07:12.442" endtime="20201108 21:07:12.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20201108 21:07:12.464" level="INFO">{'logout': True}</msg>
<status status="PASS" starttime="20201108 21:07:12.463" endtime="20201108 21:07:12.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.cookies}</arg>
</arguments>
<msg timestamp="20201108 21:07:12.465" level="INFO">&lt;RequestsCookieJar[]&gt;</msg>
<status status="PASS" starttime="20201108 21:07:12.465" endtime="20201108 21:07:12.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20201108 21:07:12.466" level="INFO">http://127.0.0.1:5000/v2/user/logout</msg>
<status status="PASS" starttime="20201108 21:07:12.466" endtime="20201108 21:07:12.466"></status>
</kw>
<kw name="Assert Equal" library="asserts">
<doc>Fail if given objects are unequal as determined by the '==' operator.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20201108 21:07:12.466" endtime="20201108 21:07:12.467"></status>
</kw>
<kw name="Assert Equal By Dpath" library="asserts">
<doc>Fail if given objects are unequal as determined by the '==' operator.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>logout</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20201108 21:07:12.469" level="INFO">Response was: {'logout': True}</msg>
<msg timestamp="20201108 21:07:12.469" level="INFO">Dpath was: logout</msg>
<msg timestamp="20201108 21:07:12.469" level="INFO">The real value was: True</msg>
<msg timestamp="20201108 21:07:12.469" level="INFO">The expected value was: True</msg>
<status status="PASS" starttime="20201108 21:07:12.467" endtime="20201108 21:07:12.469"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20201108 21:07:12.438" endtime="20201108 21:07:12.470" critical="yes"></status>
</test>
<status status="PASS" starttime="20201108 21:07:12.119" endtime="20201108 21:07:12.470"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0">smoke</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="Simple test the api--/user/logout">Simple test the api--/user/logout</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
