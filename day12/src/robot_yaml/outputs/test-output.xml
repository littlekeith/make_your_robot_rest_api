<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on win32)" generated="20201104 10:04:55.108" rpa="false">
<suite id="s1" name="Simple test the api--/user/login">
<kw name="Create Session" library="RequestsLibrary" type="setup">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localenv</arg>
<arg>http://127.0.0.1:5000/v2/</arg>
</arguments>
<msg timestamp="20201104 10:04:55.306" level="INFO">Creating Session using : alias=localenv, url=http://127.0.0.1:5000/v2/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20201104 10:04:55.305" endtime="20201104 10:04:55.307"></status>
</kw>
<test id="s1-t1" name="simple send get request">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>None</arg>
</arguments>
<assign>
<var>${request_data}</var>
</assign>
<msg timestamp="20201104 10:04:55.308" level="INFO">${request_data} = None</msg>
<status status="PASS" starttime="20201104 10:04:55.308" endtime="20201104 10:04:55.308"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>None</arg>
</arguments>
<assign>
<var>${request_json}</var>
</assign>
<msg timestamp="20201104 10:04:55.308" level="INFO">${request_json} = None</msg>
<status status="PASS" starttime="20201104 10:04:55.308" endtime="20201104 10:04:55.308"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>ordereddict([('username', 'testname'), ('password', 123456)])</arg>
</arguments>
<assign>
<var>${request_params}</var>
</assign>
<msg timestamp="20201104 10:04:55.310" level="INFO">${request_params} = ordereddict([('username', 'testname'), ('password', 123456)])</msg>
<status status="PASS" starttime="20201104 10:04:55.309" endtime="20201104 10:04:55.310"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localenv</arg>
<arg>/user/login</arg>
<arg>params=${request_params}</arg>
<arg>data=${request_data}</arg>
<arg>json=${request_json}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20201104 10:04:55.311" level="INFO">GET Request using : uri=/user/login, params=ordereddict([('username', 'testname'), ('password', 123456)]), allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20201104 10:04:55.329" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201104 10:04:55.310" endtime="20201104 10:04:55.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20201104 10:04:55.330" level="INFO">{'_links': {'collection': [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations'}], 'self': [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations/732'}], 'up': [{'href': 'https://example.com/wp-json/wc/v3/products/22'}]}, 'attributes': [{'id': 6, 'name': 'Color', 'option': 'Black'}], 'date_created': '2020-10-26', 'date_modify': '2020-11-04', 'dimensions': {'height': '', 'length': '', 'width': ''}, 'id': 732, 'weight': -1}</msg>
<status status="PASS" starttime="20201104 10:04:55.329" endtime="20201104 10:04:55.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20201104 10:04:55.330" level="INFO">http://127.0.0.1:5000/v2/user/login?username=testname&amp;password=123456</msg>
<status status="PASS" starttime="20201104 10:04:55.330" endtime="20201104 10:04:55.330"></status>
</kw>
<kw name="Assert Equal" library="asserts">
<doc>Fail if given objects are unequal as determined by the '==' operator.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20201104 10:04:55.330" endtime="20201104 10:04:55.331"></status>
</kw>
<kw name="Assert Equal By Dpath" library="asserts">
<doc>Fail if given objects are unequal as determined by the '==' operator.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>date_created</arg>
<arg>2020-10-26</arg>
</arguments>
<msg timestamp="20201104 10:04:55.337" level="INFO">Response was: {'_links': {'collection': [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations'}], 'self': [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations/732'}], 'up': [{'href': 'https://example.com/wp-json/wc/v3/products/22'}]}, 'attributes': [{'id': 6, 'name': 'Color', 'option': 'Black'}], 'date_created': '2020-10-26', 'date_modify': '2020-11-04', 'dimensions': {'height': '', 'length': '', 'width': ''}, 'id': 732, 'weight': -1}</msg>
<msg timestamp="20201104 10:04:55.337" level="INFO">Dpath was: date_created</msg>
<msg timestamp="20201104 10:04:55.337" level="INFO">The real value was: 2020-10-26</msg>
<msg timestamp="20201104 10:04:55.337" level="INFO">The expected value was: 2020-10-26</msg>
<status status="PASS" starttime="20201104 10:04:55.331" endtime="20201104 10:04:55.337"></status>
</kw>
<kw name="Save Function Result Into Variables" library="dynamic_save">
<doc>1. get function result by dpath and save it into robot variable
2. saved variable type only support global, suite, test, common variable
3. run keyword with robot variable</doc>
<arguments>
<arg>[ordereddict([('keyword', 'get_current_day'), ('args', ['%Y-%m-%d']), ('saved_var_names', [ordereddict([('name', '${expected_date}')])]), ('type', 'set_test_variable')])]</arg>
<arg>assert_equal_by_dpath</arg>
<arg>['${resp.json()}', 'date_modify', '${expected_date}']</arg>
</arguments>
<kw name="Get Current Day" library="common_date">
<doc>get current date, return _format is %Y%m%d%H</doc>
<arguments>
<arg>%Y-%m-%d</arg>
</arguments>
<status status="PASS" starttime="20201104 10:04:55.338" endtime="20201104 10:04:55.338"></status>
</kw>
<msg timestamp="20201104 10:04:55.338" level="INFO">the receive: [ordereddict([('name', '${expected_date}')])]</msg>
<msg timestamp="20201104 10:04:55.338" level="INFO">the return value: 2020-11-04</msg>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${expected_date}</arg>
<arg>2020-11-04</arg>
</arguments>
<msg timestamp="20201104 10:04:55.340" level="INFO">${expected_date} = 2020-11-04</msg>
<status status="PASS" starttime="20201104 10:04:55.338" endtime="20201104 10:04:55.340"></status>
</kw>
<kw name="Assert Equal By Dpath" library="asserts">
<doc>Fail if given objects are unequal as determined by the '==' operator.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>date_modify</arg>
<arg>${expected_date}</arg>
</arguments>
<msg timestamp="20201104 10:04:55.341" level="INFO">Response was: {'_links': {'collection': [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations'}], 'self': [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations/732'}], 'up': [{'href': 'https://example.com/wp-json/wc/v3/products/22'}]}, 'attributes': [{'id': 6, 'name': 'Color', 'option': 'Black'}], 'date_created': '2020-10-26', 'date_modify': '2020-11-04', 'dimensions': {'height': '', 'length': '', 'width': ''}, 'id': 732, 'weight': -1}</msg>
<msg timestamp="20201104 10:04:55.341" level="INFO">Dpath was: date_modify</msg>
<msg timestamp="20201104 10:04:55.341" level="INFO">The real value was: 2020-11-04</msg>
<msg timestamp="20201104 10:04:55.341" level="INFO">The expected value was: 2020-11-04</msg>
<status status="PASS" starttime="20201104 10:04:55.340" endtime="20201104 10:04:55.342"></status>
</kw>
<status status="PASS" starttime="20201104 10:04:55.337" endtime="20201104 10:04:55.342"></status>
</kw>
<kw name="Assert Equal By Dpath" library="asserts">
<doc>Fail if given objects are unequal as determined by the '==' operator.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>**/href</arg>
<arg>https://example.com/wp-json/wc/v3/products/22</arg>
</arguments>
<msg timestamp="20201104 10:04:55.343" level="INFO">Response was: {'_links': {'collection': [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations'}], 'self': [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations/732'}], 'up': [{'href': 'https://example.com/wp-json/wc/v3/products/22'}]}, 'attributes': [{'id': 6, 'name': 'Color', 'option': 'Black'}], 'date_created': '2020-10-26', 'date_modify': '2020-11-04', 'dimensions': {'height': '', 'length': '', 'width': ''}, 'id': 732, 'weight': -1}</msg>
<msg timestamp="20201104 10:04:55.343" level="INFO">Dpath was: **/href</msg>
<msg timestamp="20201104 10:04:55.343" level="INFO">The real value was: https://example.com/wp-json/wc/v3/products/22</msg>
<msg timestamp="20201104 10:04:55.343" level="INFO">The expected value was: https://example.com/wp-json/wc/v3/products/22</msg>
<status status="PASS" starttime="20201104 10:04:55.342" endtime="20201104 10:04:55.343"></status>
</kw>
<kw name="Assert Equal By Dpath" library="asserts">
<doc>Fail if given objects are unequal as determined by the '==' operator.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>_links/up/0/href</arg>
<arg>https://example.com/wp-json/wc/v3/products/22</arg>
</arguments>
<msg timestamp="20201104 10:04:55.344" level="INFO">Response was: {'_links': {'collection': [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations'}], 'self': [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations/732'}], 'up': [{'href': 'https://example.com/wp-json/wc/v3/products/22'}]}, 'attributes': [{'id': 6, 'name': 'Color', 'option': 'Black'}], 'date_created': '2020-10-26', 'date_modify': '2020-11-04', 'dimensions': {'height': '', 'length': '', 'width': ''}, 'id': 732, 'weight': -1}</msg>
<msg timestamp="20201104 10:04:55.344" level="INFO">Dpath was: _links/up/0/href</msg>
<msg timestamp="20201104 10:04:55.344" level="INFO">The real value was: https://example.com/wp-json/wc/v3/products/22</msg>
<msg timestamp="20201104 10:04:55.344" level="INFO">The expected value was: https://example.com/wp-json/wc/v3/products/22</msg>
<status status="PASS" starttime="20201104 10:04:55.343" endtime="20201104 10:04:55.345"></status>
</kw>
<kw name="Save Function Result Into Variables" library="dynamic_save">
<doc>1. get function result by dpath and save it into robot variable
2. saved variable type only support global, suite, test, common variable
3. run keyword with robot variable</doc>
<arguments>
<arg>[ordereddict([('keyword', 'get_collection'), ('saved_var_names', [ordereddict([('name', '${collection}')])]), ('type', 'set_test_variable')])]</arg>
<arg>assert_equal_by_dpath</arg>
<arg>['${resp.json()}', '_links/collection', '${collection}']</arg>
</arguments>
<kw name="Get Collection" library="dynamic_save">
<status status="PASS" starttime="20201104 10:04:55.345" endtime="20201104 10:04:55.345"></status>
</kw>
<msg timestamp="20201104 10:04:55.345" level="INFO">the receive: [ordereddict([('name', '${collection}')])]</msg>
<msg timestamp="20201104 10:04:55.345" level="INFO">the return value: [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations'}]</msg>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${collection}</arg>
<arg>[{'href': 'https://example.com/wp-json/wc/v3/products/22/variations'}]</arg>
</arguments>
<msg timestamp="20201104 10:04:55.347" level="INFO">${collection} = [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations'}]</msg>
<status status="PASS" starttime="20201104 10:04:55.346" endtime="20201104 10:04:55.347"></status>
</kw>
<kw name="Assert Equal By Dpath" library="asserts">
<doc>Fail if given objects are unequal as determined by the '==' operator.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>_links/collection</arg>
<arg>${collection}</arg>
</arguments>
<msg timestamp="20201104 10:04:55.348" level="INFO">Response was: {'_links': {'collection': [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations'}], 'self': [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations/732'}], 'up': [{'href': 'https://example.com/wp-json/wc/v3/products/22'}]}, 'attributes': [{'id': 6, 'name': 'Color', 'option': 'Black'}], 'date_created': '2020-10-26', 'date_modify': '2020-11-04', 'dimensions': {'height': '', 'length': '', 'width': ''}, 'id': 732, 'weight': -1}</msg>
<msg timestamp="20201104 10:04:55.348" level="INFO">Dpath was: _links/collection</msg>
<msg timestamp="20201104 10:04:55.348" level="INFO">The real value was: [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations'}]</msg>
<msg timestamp="20201104 10:04:55.348" level="INFO">The expected value was: [{'href': 'https://example.com/wp-json/wc/v3/products/22/variations'}]</msg>
<status status="PASS" starttime="20201104 10:04:55.347" endtime="20201104 10:04:55.348"></status>
</kw>
<status status="PASS" starttime="20201104 10:04:55.345" endtime="20201104 10:04:55.348"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20201104 10:04:55.307" endtime="20201104 10:04:55.348" critical="yes"></status>
</test>
<status status="PASS" starttime="20201104 10:04:55.110" endtime="20201104 10:04:55.348"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">smoke</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Simple test the api--/user/login">Simple test the api--/user/login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
