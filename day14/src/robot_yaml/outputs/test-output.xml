<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.8 on win32)" generated="20201109 20:43:40.923" rpa="false">
<suite id="s1" name="Simple test the api--/user/logout">
<kw name="Create Session" library="RequestsLibrary" type="setup">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localenv</arg>
<arg>http://127.0.0.1:5000/v2/</arg>
</arguments>
<assign>
<var>${session}</var>
</assign>
<msg timestamp="20201109 20:43:41.215" level="INFO">Creating Session using : alias=localenv, url=http://127.0.0.1:5000/v2/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20201109 20:43:41.216" level="INFO">${session} = &lt;requests.sessions.Session object at 0x0000020BE21C8400&gt;</msg>
<status status="PASS" starttime="20201109 20:43:41.214" endtime="20201109 20:43:41.216"></status>
</kw>
<test id="s1-t1" name="success login">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>None</arg>
</arguments>
<assign>
<var>${request_data}</var>
</assign>
<msg timestamp="20201109 20:43:41.217" level="INFO">${request_data} = None</msg>
<status status="PASS" starttime="20201109 20:43:41.217" endtime="20201109 20:43:41.217"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>None</arg>
</arguments>
<assign>
<var>${request_json}</var>
</assign>
<msg timestamp="20201109 20:43:41.218" level="INFO">${request_json} = None</msg>
<status status="PASS" starttime="20201109 20:43:41.218" endtime="20201109 20:43:41.218"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>ordereddict([('username', 'test'), ('password', 'test')])</arg>
</arguments>
<assign>
<var>${request_params}</var>
</assign>
<msg timestamp="20201109 20:43:41.219" level="INFO">${request_params} = ordereddict([('username', 'test'), ('password', 'test')])</msg>
<status status="PASS" starttime="20201109 20:43:41.219" endtime="20201109 20:43:41.219"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>None</arg>
</arguments>
<assign>
<var>${request_headers}</var>
</assign>
<msg timestamp="20201109 20:43:41.219" level="INFO">${request_headers} = None</msg>
<status status="PASS" starttime="20201109 20:43:41.219" endtime="20201109 20:43:41.220"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localenv</arg>
<arg>/user/login</arg>
<arg>headers=${request_headers}</arg>
<arg>params=${request_params}</arg>
<arg>data=${request_data}</arg>
<arg>json=${request_json}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20201109 20:43:41.220" level="INFO">GET Request using : uri=/user/login, params=ordereddict([('username', 'test'), ('password', 'test')]), allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
data=None 
json=None</msg>
<msg timestamp="20201109 20:43:41.239" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201109 20:43:41.220" endtime="20201109 20:43:41.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20201109 20:43:41.240" level="INFO">{'access_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDQ5MjU4MjEsIm5iZiI6MTYwNDkyNTgyMSwianRpIjoiZDcyNjU0MjMtNjBkYS00ZmJjLWE0MzctMmE4MjhmYTE5N2E4IiwiZXhwIjoxNjA0OTI2NzIxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.xH41ME2J4ZKBUyVMxJcf8XcUY7NwjkzewGHsmgeu01E', 'login': True}</msg>
<status status="PASS" starttime="20201109 20:43:41.239" endtime="20201109 20:43:41.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.cookies}</arg>
</arguments>
<msg timestamp="20201109 20:43:41.240" level="INFO">&lt;RequestsCookieJar[]&gt;</msg>
<status status="PASS" starttime="20201109 20:43:41.240" endtime="20201109 20:43:41.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.url}</arg>
</arguments>
<msg timestamp="20201109 20:43:41.241" level="INFO">http://127.0.0.1:5000/v2/user/login?username=test&amp;password=test</msg>
<status status="PASS" starttime="20201109 20:43:41.241" endtime="20201109 20:43:41.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.headers}</arg>
</arguments>
<msg timestamp="20201109 20:43:41.242" level="INFO">{'Content-Type': 'application/json', 'Content-Length': '318', 'Server': 'Werkzeug/1.0.1 Python/3.6.8', 'Date': 'Mon, 09 Nov 2020 12:43:41 GMT'}</msg>
<status status="PASS" starttime="20201109 20:43:41.241" endtime="20201109 20:43:41.242"></status>
</kw>
<kw name="Assert Equal" library="asserts">
<doc>Fail if given objects are unequal as determined by the '==' operator.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20201109 20:43:41.242" endtime="20201109 20:43:41.243"></status>
</kw>
<kw name="Assert Equal By Dpath" library="asserts">
<doc>Fail if given objects are unequal as determined by the '==' operator.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>login</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20201109 20:43:41.252" level="INFO">Response was: {'access_token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDQ5MjU4MjEsIm5iZiI6MTYwNDkyNTgyMSwianRpIjoiZDcyNjU0MjMtNjBkYS00ZmJjLWE0MzctMmE4MjhmYTE5N2E4IiwiZXhwIjoxNjA0OTI2NzIxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.xH41ME2J4ZKBUyVMxJcf8XcUY7NwjkzewGHsmgeu01E', 'login': True}</msg>
<msg timestamp="20201109 20:43:41.252" level="INFO">Dpath was: login</msg>
<msg timestamp="20201109 20:43:41.252" level="INFO">The real value was: True</msg>
<msg timestamp="20201109 20:43:41.252" level="INFO">The expected value was: True</msg>
<status status="PASS" starttime="20201109 20:43:41.243" endtime="20201109 20:43:41.252"></status>
</kw>
<kw name="Save Function Result Into Variables" library="dynamic_save">
<doc>1. get function result by dpath and save it into robot variable
2. saved variable type only support global, suite, test, common variable
3. run keyword with robot variable</doc>
<arguments>
<arg>[ordereddict([('keyword', 'extract_variable_from_reponse'), ('args', ['${resp.json()}', 'access_token']), ('saved_var_names', [ordereddict([('name', '${real_access_token}')])]), ('type', 'set_suite_variable')])]</arg>
<arg>None</arg>
<arg>None</arg>
</arguments>
<kw name="Extract Variable From Reponse" library="parsing_responses">
<arguments>
<arg>${resp.json()}</arg>
<arg>access_token</arg>
</arguments>
<status status="PASS" starttime="20201109 20:43:41.253" endtime="20201109 20:43:41.253"></status>
</kw>
<msg timestamp="20201109 20:43:41.253" level="INFO">the receive: [ordereddict([('name', '${real_access_token}')])]</msg>
<msg timestamp="20201109 20:43:41.253" level="INFO">the return value: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDQ5MjU4MjEsIm5iZiI6MTYwNDkyNTgyMSwianRpIjoiZDcyNjU0MjMtNjBkYS00ZmJjLWE0MzctMmE4MjhmYTE5N2E4IiwiZXhwIjoxNjA0OTI2NzIxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.xH41ME2J4ZKBUyVMxJcf8XcUY7NwjkzewGHsmgeu01E</msg>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${real_access_token}</arg>
<arg>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDQ5MjU4MjEsIm5iZiI6MTYwNDkyNTgyMSwianRpIjoiZDcyNjU0MjMtNjBkYS00ZmJjLWE0MzctMmE4MjhmYTE5N2E4IiwiZXhwIjoxNjA0OTI2NzIxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.xH41ME2J4ZKBUyVMxJcf8XcUY7NwjkzewGHsmgeu01E</arg>
</arguments>
<msg timestamp="20201109 20:43:41.255" level="INFO">${real_access_token} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDQ5MjU4MjEsIm5iZiI6MTYwNDkyNTgyMSwianRpIjoiZDcyNjU0MjMtNjBkYS00ZmJjLWE0MzctMmE4MjhmYTE5N2E4IiwiZXhwIjoxNjA0OTI2NzIxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI...</msg>
<status status="PASS" starttime="20201109 20:43:41.254" endtime="20201109 20:43:41.255"></status>
</kw>
<status status="PASS" starttime="20201109 20:43:41.252" endtime="20201109 20:43:41.255"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20201109 20:43:41.216" endtime="20201109 20:43:41.255" critical="yes"></status>
</test>
<test id="s1-t2" name="success logout">
<kw name="Update Header Key" library="sessions" type="setup">
<arguments>
<arg>Authorization</arg>
<arg>Bearer ${real_access_token}</arg>
</arguments>
<assign>
<var>${requests_headers}</var>
</assign>
<msg timestamp="20201109 20:43:41.256" level="INFO">old headers: {}</msg>
<msg timestamp="20201109 20:43:41.256" level="INFO">update headers key: Authorization, value: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDQ5MjU4MjEsIm5iZiI6MTYwNDkyNTgyMSwianRpIjoiZDcyNjU0MjMtNjBkYS00ZmJjLWE0MzctMmE4MjhmYTE5N2E4IiwiZXhwIjoxNjA0OTI2NzIxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.xH41ME2J4ZKBUyVMxJcf8XcUY7NwjkzewGHsmgeu01E</msg>
<msg timestamp="20201109 20:43:41.256" level="INFO">newer headers: {'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDQ5MjU4MjEsIm5iZiI6MTYwNDkyNTgyMSwianRpIjoiZDcyNjU0MjMtNjBkYS00ZmJjLWE0MzctMmE4MjhmYTE5N2E4IiwiZXhwIjoxNjA0OTI2NzIxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.xH41ME2J4ZKBUyVMxJcf8XcUY7NwjkzewGHsmgeu01E'}</msg>
<msg timestamp="20201109 20:43:41.257" level="INFO">${requests_headers} = {'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDQ5MjU4MjEsIm5iZiI6MTYwNDkyNTgyMSwianRpIjoiZDcyNjU0MjMtNjBkYS00ZmJjLWE0MzctMmE4MjhmYTE5N2E4IiwiZXhwIjoxNjA0OTI2NzIxLCJpZGVud...</msg>
<status status="PASS" starttime="20201109 20:43:41.256" endtime="20201109 20:43:41.257"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>None</arg>
</arguments>
<assign>
<var>${request_data}</var>
</assign>
<msg timestamp="20201109 20:43:41.258" level="INFO">${request_data} = None</msg>
<status status="PASS" starttime="20201109 20:43:41.257" endtime="20201109 20:43:41.258"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>None</arg>
</arguments>
<assign>
<var>${request_json}</var>
</assign>
<msg timestamp="20201109 20:43:41.259" level="INFO">${request_json} = None</msg>
<status status="PASS" starttime="20201109 20:43:41.258" endtime="20201109 20:43:41.259"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>None</arg>
</arguments>
<assign>
<var>${request_params}</var>
</assign>
<msg timestamp="20201109 20:43:41.259" level="INFO">${request_params} = None</msg>
<status status="PASS" starttime="20201109 20:43:41.259" endtime="20201109 20:43:41.260"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${requests_headers}</arg>
</arguments>
<assign>
<var>${request_headers}</var>
</assign>
<msg timestamp="20201109 20:43:41.260" level="INFO">${request_headers} = {'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDQ5MjU4MjEsIm5iZiI6MTYwNDkyNTgyMSwianRpIjoiZDcyNjU0MjMtNjBkYS00ZmJjLWE0MzctMmE4MjhmYTE5N2E4IiwiZXhwIjoxNjA0OTI2NzIxLCJpZGVud...</msg>
<status status="PASS" starttime="20201109 20:43:41.260" endtime="20201109 20:43:41.260"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localenv</arg>
<arg>/user/logout</arg>
<arg>headers=${request_headers}</arg>
<arg>params=${request_params}</arg>
<arg>data=${request_data}</arg>
<arg>json=${request_json}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20201109 20:43:41.261" level="INFO">GET Request using : uri=/user/logout, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDQ5MjU4MjEsIm5iZiI6MTYwNDkyNTgyMSwianRpIjoiZDcyNjU0MjMtNjBkYS00ZmJjLWE0MzctMmE4MjhmYTE5N2E4IiwiZXhwIjoxNjA0OTI2NzIxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.xH41ME2J4ZKBUyVMxJcf8XcUY7NwjkzewGHsmgeu01E'} 
data=None 
json=None</msg>
<msg timestamp="20201109 20:43:41.280" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20201109 20:43:41.260" endtime="20201109 20:43:41.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.json()}</arg>
</arguments>
<msg timestamp="20201109 20:43:41.281" level="INFO">{'logout': True}</msg>
<status status="PASS" starttime="20201109 20:43:41.280" endtime="20201109 20:43:41.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp.cookies}</arg>
</arguments>
<msg timestamp="20201109 20:43:41.282" level="INFO">&lt;RequestsCookieJar[]&gt;</msg>
<status status="PASS" starttime="20201109 20:43:41.281" endtime="20201109 20:43:41.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${real_access_token}</arg>
</arguments>
<msg timestamp="20201109 20:43:41.282" level="INFO">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDQ5MjU4MjEsIm5iZiI6MTYwNDkyNTgyMSwianRpIjoiZDcyNjU0MjMtNjBkYS00ZmJjLWE0MzctMmE4MjhmYTE5N2E4IiwiZXhwIjoxNjA0OTI2NzIxLCJpZGVudGl0eSI6InRlc3QiLCJmcmVzaCI6ZmFsc2UsInR5cGUiOiJhY2Nlc3MifQ.xH41ME2J4ZKBUyVMxJcf8XcUY7NwjkzewGHsmgeu01E</msg>
<status status="PASS" starttime="20201109 20:43:41.282" endtime="20201109 20:43:41.282"></status>
</kw>
<kw name="Assert Equal" library="asserts">
<doc>Fail if given objects are unequal as determined by the '==' operator.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20201109 20:43:41.282" endtime="20201109 20:43:41.283"></status>
</kw>
<kw name="Assert Equal By Dpath" library="asserts">
<doc>Fail if given objects are unequal as determined by the '==' operator.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>logout</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20201109 20:43:41.283" level="INFO">Response was: {'logout': True}</msg>
<msg timestamp="20201109 20:43:41.284" level="INFO">Dpath was: logout</msg>
<msg timestamp="20201109 20:43:41.284" level="INFO">The real value was: True</msg>
<msg timestamp="20201109 20:43:41.284" level="INFO">The expected value was: True</msg>
<status status="PASS" starttime="20201109 20:43:41.283" endtime="20201109 20:43:41.284"></status>
</kw>
<kw name="Log" library="BuiltIn" type="teardown">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${session.headers}</arg>
</arguments>
<msg timestamp="20201109 20:43:41.284" level="INFO">{'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}</msg>
<status status="PASS" starttime="20201109 20:43:41.284" endtime="20201109 20:43:41.284"></status>
</kw>
<tags>
<tag>smoke</tag>
</tags>
<status status="PASS" starttime="20201109 20:43:41.255" endtime="20201109 20:43:41.284" critical="yes"></status>
</test>
<status status="PASS" starttime="20201109 20:43:40.926" endtime="20201109 20:43:41.285"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0">smoke</stat>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="Simple test the api--/user/logout">Simple test the api--/user/logout</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
